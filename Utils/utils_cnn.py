# Author : Charles-Henry Bertrand Van Ouytsel
# Taken from https://gist.github.com/willwest/fcb61b110b9f7f59db40
import csv
import numpy as np
from sklearn.model_selection import GridSearchCV


'''Exports a CSV of the GridCV scores and parameters.
gs_clf: A GridSearchCV object which has been fitted
export_file: A file path
'''
def print_GridCV_scores(gs_clf, export_file):

    with open(export_file, 'w') as outfile:
        csvwriter = csv.writer(outfile, delimiter=',')

        # Create the header using the parameter names 
        header = ["mean","std"]
        param_names = [param for param in gs_clf.param_grid]
        header.extend(param_names)

        csvwriter.writerow(header)

        for config in gs_clf.grid_scores_:
            # Get mean and standard deviation
            mean = config[1]
            std = np.std(config[2])
            row = [mean,std]

            # Get the list of parameter settings and add to row
            params = [str(p) for p in config[0].values()]
            row.extend(params)

            csvwriter.writerow(row)

'''Exports a CSV of the scores obtained after training and testing on a dataset.
gs_clf: A GridSearchCV object which has been fitted
export_file: A file path
'''
def print_score(clf,scores, export_file):

    with open(export_file, 'w') as outfile:
        csvwriter = csv.writer(outfile, delimiter=',')

        # Create the header
        names = [param for param in clf.metrics_names]

        csvwriter.writerow(names)
        csvwriter.writerow(scores)

